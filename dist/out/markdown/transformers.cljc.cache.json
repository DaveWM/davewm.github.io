["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$markdown.transformers","~:imports",null,"~:requires",["^ ","~$string","~$clojure.string","^<","^<","~$markdown.links","^=","~$markdown.lists","^>","~$markdown.tables","^?","~$markdown.common","^@"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$italics","^@","~$separator","^@","~$make-heading","^@","~$dashes","^@","~$thaw-strings","^@","~$implicit-reference-link","^=","~$bold","^@","~$footnote-link","^=","~$escape-code","^@","~$table","^?","~$strong","^@","~$li","^>","~$reference-link","^=","~$image-reference-link","^=","~$em","^@","~$escaped-chars","^@","~$inline-code","^@","~$strikethrough","^@","~$link","^=","~$image","^="],"~:defs",["^ ","~$h2?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","~:line",39,"~:column",7,"~:end-line",39,"~:end-column",10,"~:arglists",["~#list",["~$quote",["^15",[["~$text"]]]]]],"^7","~$markdown.transformers/h2?","^[","dist/out/markdown/transformers.cljc","^13",10,"~:method-params",["^15",[["^17"]]],"~:protocol-impl",null,"~:arglists-meta",["^15",[null,null]],"^11",1,"~:variadic?",false,"^10",39,"~:ret-tag",["^6",[null,"~$boolean","~$clj-nil"]],"^12",39,"~:max-fixed-arity",1,"~:fn-var",true,"^14",["^15",["^16",["^15",[["^17"]]]]]],"~$paragraph",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",125,"^11",7,"^12",125,"^13",16,"^14",["^15",["^16",["^15",[["^17",["^ ","~:keys",["~$eof","~$heading","~$inline-heading","~$temp","~$hr","~$code","~$lists","~$blockquote","^1B","~$last-line-empty?"],"~:as","~$state"]]]]]]],"^7","~$markdown.transformers/paragraph","^[","dist/out/markdown/transformers.cljc","^13",16,"^19",["^15",[["^17","~$p__22085"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",125,"^1=","~$cljs.core/IVector","^12",125,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1D","^1E","^1F","^1G","^1H","^1I","^1J","^1K","^1B","^1L"],"^1M","^1N"]]]]]]],"^1K",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",204,"^11",7,"^12",204,"^13",17,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1D","^1I","~$codeblock","^1J"],"^1M","^1N"]]]]]]],"^7","~$markdown.transformers/blockquote","^[","dist/out/markdown/transformers.cljc","^13",17,"^19",["^15",[["^17","~$p__22094"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",204,"^1=","^1Q","^12",204,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1D","^1I","^1R","^1J"],"^1M","^1N"]]]]]]],"^1E",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",65,"^11",7,"^12",65,"^13",14,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/heading","^[","dist/out/markdown/transformers.cljc","^13",14,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",65,"^1=","^1Q","^12",65,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$superscript",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",48,"^11",7,"^12",48,"^13",18,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/superscript","^[","dist/out/markdown/transformers.cljc","^13",18,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",48,"^1=","^1Q","^12",48,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$autourl-transformer",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",88,"^11",7,"^12",88,"^13",26,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/autourl-transformer","^[","dist/out/markdown/transformers.cljc","^13",26,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",88,"^1=","^1Q","^12",88,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$h1?",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",36,"^11",7,"^12",36,"^13",10,"^14",["^15",["^16",["^15",[["^17"]]]]]],"^7","~$markdown.transformers/h1?","^[","dist/out/markdown/transformers.cljc","^13",10,"^19",["^15",[["^17"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",36,"^1=",["^6",[null,"^1>","^1?"]],"^12",36,"^1@",1,"^1A",true,"^14",["^15",["^16",["^15",[["^17"]]]]]],"^1R",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",166,"^11",7,"^12",166,"^13",16,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/codeblock","^[","dist/out/markdown/transformers.cljc","^13",16,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",166,"^1=","^1Q","^12",166,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$flatten-metadata",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",259,"^11",7,"^12",259,"^13",23,"^14",["^15",["^16",["^15",[["~$metadata"]]]]],"~:doc","Given a list of maps which contain a single key/value, flatten them all into\n  a single map with all the leading spaces removed. If an empty list is provided\n  then return nil."],"^7","~$markdown.transformers/flatten-metadata","^[","dist/out/markdown/transformers.cljc","^13",23,"^19",["^15",[["^22"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",259,"^1=",["^6",["~$cljs.core/IMap","^1?"]],"^12",259,"^1@",1,"^1A",true,"^14",["^15",["^16",["^15",[["^22"]]]]],"^23","Given a list of maps which contain a single key/value, flatten them all into\n  a single map with all the leading spaces removed. If an empty list is provided\n  then return nil."],"^1H",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",193,"^11",7,"^12",193,"^13",9,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/hr","^[","dist/out/markdown/transformers.cljc","^13",9,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",193,"^1=","^1Q","^12",193,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$transformer-vector",["^ ","^7","~$markdown.transformers/transformer-vector","^[","dist/out/markdown/transformers.cljc","^10",293,"^11",1,"^12",293,"^13",24,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",293,"^11",6,"^12",293,"^13",24],"~:tag","^1Q"],"~$autoemail-transformer",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",98,"^11",7,"^12",98,"^13",28,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/autoemail-transformer","^[","dist/out/markdown/transformers.cljc","^13",28,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",98,"^1=","^1Q","^12",98,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$parse-metadata-line",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",245,"^11",7,"^12",245,"^13",26,"^14",["^15",["^16",["^15",[["~$line"]]]]],"^23","Given a line of metadata header text return either a list containing a parsed\n  and normalizd key and the original text of the value, or if no header is found\n  (this is a continuation or new value from a pervious header key) simply\n  return the text. If a blank or invalid line is found return nil."],"^7","~$markdown.transformers/parse-metadata-line","^[","dist/out/markdown/transformers.cljc","^13",26,"^19",["^15",[["^2="]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",245,"^1=",["^6",[null,"^1Q","^1?"]],"^12",245,"^1@",1,"^1A",true,"^14",["^15",["^16",["^15",[["^2="]]]]],"^23","Given a line of metadata header text return either a list containing a parsed\n  and normalizd key and the original text of the value, or if no header is found\n  (this is a continuation or new value from a pervious header key) simply\n  return the text. If a blank or invalid line is found return nil."],"~$formatter",["^ ","^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",27,"^11",27,"^12",27,"^13",36,"~:dynamic",true,"~:declared",true],"^7","~$markdown.transformers/formatter","^[","dist/out/markdown/transformers.cljc","^13",36,"^11",1,"^2@",true,"^10",27,"^2A",true,"^12",27],"~$*next-line*",["^ ","^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",29,"^11",20,"^12",29,"^13",31,"^2@",true,"^2A",true],"^7","~$markdown.transformers/*next-line*","^[","dist/out/markdown/transformers.cljc","^13",31,"^11",1,"^2@",true,"^10",29,"^2A",true,"^12",29],"~$empty-line",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",42,"^11",7,"^12",42,"^13",17,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/empty-line","^[","dist/out/markdown/transformers.cljc","^13",17,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",42,"^1=","^1Q","^12",42,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"~$footer",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",231,"^11",7,"^12",231,"^13",13,"^14",["^15",["^16",["^15",[["~$footnotes"]]]]]],"^7","~$markdown.transformers/footer","^[","dist/out/markdown/transformers.cljc","^13",13,"^19",["^15",[["^2H"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",231,"^1=",["^6",["~$any","^;"]],"^12",231,"^1@",1,"^1A",true,"^14",["^15",["^16",["^15",[["^2H"]]]]]],"~$heading?",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",31,"^11",7,"^12",31,"^13",15,"^14",["^15",["^16",["^15",[["^17","~$type"]]]]]],"^7","~$markdown.transformers/heading?","^[","dist/out/markdown/transformers.cljc","^13",15,"^19",["^15",[["^17","^2L"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",31,"^1=",["^6",[null,"^1>","^1?"]],"^12",31,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^2L"]]]]]],"~$set-line-state",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",112,"^11",7,"^12",112,"^13",21,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1F"],"^1M","^1N"]]]]]]],"^7","~$markdown.transformers/set-line-state","^[","dist/out/markdown/transformers.cljc","^13",21,"^19",["^15",[["^17","~$p__22082"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",112,"^1=","^1Q","^12",112,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1F"],"^1M","^1N"]]]]]]],"~$clear-line-state",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",118,"^11",7,"^12",118,"^13",23,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^7","~$markdown.transformers/clear-line-state","^[","dist/out/markdown/transformers.cljc","^13",23,"^19",["^15",[["^17","^1N"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",118,"^1=","^1Q","^12",118,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17","^1N"]]]]]],"^1I",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",145,"^11",7,"^12",145,"^13",11,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1D","^1J","^1I","^1R"],"^1M","^1N"]]]]]]],"^7","~$markdown.transformers/code","^[","dist/out/markdown/transformers.cljc","^13",11,"^19",["^15",[["^17","~$p__22088"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",145,"^1=","^1Q","^12",145,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1D","^1J","^1I","^1R"],"^1M","^1N"]]]]]]],"~$parse-metadata-headers",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",280,"^11",7,"^12",280,"^13",29,"^14",["^15",["^16",["^15",[["~$lines-seq"]]]]],"^23","Given a sequence of lines from a markdown document, attempt to parse a\n  metadata header if it exists."],"^7","~$markdown.transformers/parse-metadata-headers","^[","dist/out/markdown/transformers.cljc","^13",29,"^19",["^15",[["^2V"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",280,"^1=","^2J","^12",280,"^1@",1,"^1A",true,"^14",["^15",["^16",["^15",[["^2V"]]]]],"^23","Given a sequence of lines from a markdown document, attempt to parse a\n  metadata header if it exists."],"~$br",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",81,"^11",7,"^12",81,"^13",9,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1I","^1J"],"^1M","^1N"]]]]]]],"^7","~$markdown.transformers/br","^[","dist/out/markdown/transformers.cljc","^13",9,"^19",["^15",[["^17","~$p__22077"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",81,"^1=","^1Q","^12",81,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^17",["^ ","^1C",["^1I","^1J"],"^1M","^1N"]]]]]]],"~$paragraph-text",["^ ","^Y",null,"^Z",["^ ","^[","/home/david/Code/davewm.github.io/dist/out/markdown/transformers.cljc","^10",121,"^11",7,"^12",121,"^13",21,"^14",["^15",["^16",["^15",[["^1L","^17"]]]]]],"^7","~$markdown.transformers/paragraph-text","^[","dist/out/markdown/transformers.cljc","^13",21,"^19",["^15",[["^1L","^17"]]],"^1:",null,"^1;",["^15",[null,null]],"^11",1,"^1<",false,"^10",121,"^1=",["^6",[null,"^2J"]],"^12",121,"^1@",2,"^1A",true,"^14",["^15",["^16",["^15",[["^1L","^17"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:codeblock","~:hr","~:temp","~:lists","~:clojurescript","~:inline-heading","~:else","~:last-line-empty?","~:default","~:code-style","~:code","~:processed","~:heading-anchors","~:eof","~:paragraph","~:blockquote","~:heading"]],"~:order",["^3?","^35","^36","^3E","^3=","^3;","^3A","^3:","^38","^39","^37","^3B","^3C","^3D","^3<","^3>","^3@"]],"^23",null]