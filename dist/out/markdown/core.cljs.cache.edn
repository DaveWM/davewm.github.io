;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name markdown.core, :imports nil, :requires {markdown.common markdown.common, markdown.links markdown.links, markdown.transformers markdown.transformers}, :uses {*substring* markdown.common, parse-footnote-link markdown.links, transformer-vector markdown.transformers, *next-line* markdown.transformers, parse-reference markdown.links, footer markdown.transformers, parse-reference-link markdown.links, parse-metadata-headers markdown.transformers}, :defs {md->html-with-meta {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 76, :column 7, :end-line 76, :end-column 25, :arglists (quote ([text & params])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text params)], :arglists ([text & params]), :arglists-meta (nil)}}, :name markdown.core/md->html-with-meta, :variadic true, :file "dist/out/markdown/core.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text params)], :arglists ([text & params]), :arglists-meta (nil)}, :method-params [(text params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists ([text & params])}, md->html {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 73, :column 7, :end-line 73, :end-column 15, :arglists (quote ([text & params])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text params)], :arglists ([text & params]), :arglists-meta (nil)}}, :name markdown.core/md->html, :variadic true, :file "dist/out/markdown/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(text params)], :arglists ([text & params]), :arglists-meta (nil)}, :method-params [(text params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists ([text & params])}, format {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 22, :column 7, :end-line 22, :end-column 13, :arglists (quote ([fmt & args])), :doc "Removed from cljs.core 0.0-1885, Ref. http://goo.gl/su7Xkj", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name markdown.core/format, :variadic true, :file "dist/out/markdown/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Removed from cljs.core 0.0-1885, Ref. http://goo.gl/su7Xkj"}, mdToHtml {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 79, :column 16, :end-line 79, :end-column 24, :export true, :arglists (quote ([& params])), :doc "Js accessible wrapper", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name markdown.core/mdToHtml, :variadic true, :file "dist/out/markdown/core.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :export true, :arglists-meta (nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists ([& params]), :doc "Js accessible wrapper"}, parse-footnotes {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([lines]))}, :name markdown.core/parse-footnotes, :variadic false, :file "dist/out/markdown/core.cljs", :end-column 22, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}, mdToHtmlWithMeta {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 84, :column 16, :end-line 84, :end-column 32, :export true, :arglists (quote ([& params])), :doc "Js accessible wrapper", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name markdown.core/mdToHtmlWithMeta, :variadic true, :file "dist/out/markdown/core.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :export true, :arglists-meta (nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists ([& params]), :doc "Js accessible wrapper"}, init-transformer {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 9, :column 8, :end-line 9, :end-column 24, :private true, :arglists (quote ([{:keys [replacement-transformers custom-transformers]}]))}, :private true, :name markdown.core/init-transformer, :variadic false, :file "dist/out/markdown/core.cljs", :end-column 24, :method-params ([p__23461]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [replacement-transformers custom-transformers]}]))}, parse-references {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 25, :column 7, :end-line 25, :end-column 23, :arglists (quote ([lines]))}, :name markdown.core/parse-references, :variadic false, :file "dist/out/markdown/core.cljs", :end-column 23, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}, md-to-html-string* {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 41, :column 7, :end-line 41, :end-column 25, :arglists (quote ([text params])), :doc "processes input text line by line and outputs an HTML string"}, :name markdown.core/md-to-html-string*, :variadic false, :file "dist/out/markdown/core.cljs", :end-column 25, :method-params ([text params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text params])), :doc "processes input text line by line and outputs an HTML string"}, parse-metadata {:protocol-inline nil, :meta {:file "/home/david/Documents/github/davewm.github.io/dist/out/markdown/core.cljs", :line 37, :column 7, :end-line 37, :end-column 21, :arglists (quote ([lines]))}, :name markdown.core/parse-metadata, :variadic false, :file "dist/out/markdown/core.cljs", :end-column 21, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:footnotes :lists :buf :unprocessed :clojurescript :last-line-empty? :footnotes? :references :next-fn-id :processed :parse-meta? :eof :reference-links? :metadata :custom-transformers :replacement-transformers :html}, :order [:replacement-transformers :custom-transformers :next-fn-id :processed :unprocessed :reference-links? :footnotes? :parse-meta? :clojurescript :references :footnotes :last-line-empty? :buf :lists :eof :metadata :html]}, :doc nil}