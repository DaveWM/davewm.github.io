["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ajax.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$-status",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","~:line",17,"~:column",4,"~:end-line",17,"~:end-column",11,"~:protocol","~$ajax.protocols/AjaxResponse","~:doc","Returns the HTTP Status of the response as an integer.","~:arglists",["~#list",["~$quote",["^H",[["~$this"]]]]]],"^D","^E","^5","~$ajax.protocols/-status","^?","dist/out/ajax/protocols.cljc","^C",11,"~:method-params",["^H",[["^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^A",1,"~:variadic?",false,"^@",15,"~:ret-tag","~$any","^B",17,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Returns the HTTP Status of the response as an integer."],"~$AjaxImpl",["^ ","^>",["^ ","~:protocol-symbol",true,"^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",22,"^A",14,"^@",3,"~:protocol-info",["^ ","~:methods",["^ ","~$-js-ajax-request",[["^J","~$request","~$handler"]]]],"^B",3,"^F","An abstraction for a javascript class that implements\n   Ajax calls.","~:jsdoc",["^H",["@interface"]]],"^U",true,"^5","~$ajax.protocols/AjaxImpl","^?","dist/out/ajax/protocols.cljc","^C",22,"^A",1,"^@",3,"^V",["^ ","^W",["^ ","^X",[["^J","^Y","^Z"]]]],"~:info",null,"^B",3,"~:tag","^Q","~:impls",["^4",[]],"^F","An abstraction for a javascript class that implements\n   Ajax calls.","^[",["^H",["@interface"]]],"~$Interceptor",["^ ","^>",["^ ","^U",true,"^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",25,"^A",14,"^@",28,"^V",["^ ","^W",["^ ","~$-process-request",[["^J","^Y"]],"~$-process-response",[["^J","~$response"]]]],"^B",28,"^F","An abstraction for something that processes requests and responses.","^[",["^H",["@interface"]]],"^U",true,"^5","~$ajax.protocols/Interceptor","^?","dist/out/ajax/protocols.cljc","^C",25,"^A",1,"^@",28,"^V",["^ ","^W",["^ ","^15",[["^J","^Y"]],"^16",[["^J","^17"]]]],"^11",null,"^B",28,"^12","^Q","^13",["^4",[]],"^F","An abstraction for something that processes requests and responses.","^[",["^H",["@interface"]]],"~$-abort",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",12,"^A",4,"^B",12,"^C",10,"^D","~$ajax.protocols/AjaxRequest","^F","Aborts a running ajax request, if possible.","^G",["^H",["^I",["^H",[["^J"]]]]]],"^D","^1:","^5","~$ajax.protocols/-abort","^?","dist/out/ajax/protocols.cljc","^C",10,"^L",["^H",[["^J"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",10,"^P","^Q","^B",12,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Aborts a running ajax request, if possible."],"~$-status-text",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",19,"^A",4,"^B",19,"^C",16,"^D","^E","^F","Returns the HTTP Status Text of the response as a string.","^G",["^H",["^I",["^H",[["^J"]]]]]],"^D","^E","^5","~$ajax.protocols/-status-text","^?","dist/out/ajax/protocols.cljc","^C",16,"^L",["^H",[["^J"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",15,"^P","^Q","^B",19,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Returns the HTTP Status Text of the response as a string."],"~$-get-response-header",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",23,"^A",4,"^B",23,"^C",24,"^D","^E","^F","Gets the specified response header (specified by a string) as a string.","^G",["^H",["^I",["^H",[["^J","~$header"]]]]]],"^D","^E","^5","~$ajax.protocols/-get-response-header","^?","dist/out/ajax/protocols.cljc","^C",24,"^L",["^H",[["^J","^1?"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",15,"^P","^Q","^B",23,"^R",2,"^S",true,"^G",["^H",["^I",["^H",[["^J","^1?"]]]]],"^F","Gets the specified response header (specified by a string) as a string."],"~$AjaxResponse",["^ ","^>",["^ ","^U",true,"^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",26,"^A",14,"^@",15,"^V",["^ ","^W",["^ ","^<",[["^J"]],"^1<",[["^J"]],"~$-body",[["^J"]],"^1>",[["^J","^1?"]],"~$-was-aborted",[["^J"]]]],"^B",15,"^F","An abstraction for an ajax response.","^[",["^H",["@interface"]]],"^U",true,"^5","^E","^?","dist/out/ajax/protocols.cljc","^C",26,"^A",1,"^@",15,"^V",["^ ","^W",["^ ","^<",[["^J"]],"^1<",[["^J"]],"^1B",[["^J"]],"^1>",[["^J","^1?"]],"^1C",[["^J"]]]],"^11",null,"^B",15,"^12","^Q","^13",["^4",["~$ajax.protocols/Response"]],"^F","An abstraction for an ajax response.","^[",["^H",["@interface"]]],"~$->Response",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",20,"^A",12,"~:internal-ctor",true,"~:factory","~:positional","^@",35,"^B",35,"^G",["^H",["^I",["^H",[["~$status","~$body","~$status-text","~$headers","~$was-aborted"]]]]],"^F","Positional factory function for ajax.protocols/Response."],"^5","~$ajax.protocols/->Response","^?","dist/out/ajax/protocols.cljc","^C",20,"^L",["^H",[["^1I","^1J","^1K","^1L","^1M"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^1F",true,"^O",false,"^1G","^1H","^@",35,"^P","^1D","^B",35,"^R",5,"^S",true,"^G",["^H",["^I",["^H",[["^1I","^1J","^1K","^1L","^1M"]]]]],"^F","Positional factory function for ajax.protocols/Response."],"~$AjaxRequest",["^ ","^>",["^ ","^U",true,"^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",25,"^A",14,"^@",10,"^V",["^ ","^W",["^ ","^19",[["^J"]]]],"^B",10,"^F","An abstraction for a running ajax request.","^[",["^H",["@interface"]]],"^U",true,"^5","^1:","^?","dist/out/ajax/protocols.cljc","^C",25,"^A",1,"^@",10,"^V",["^ ","^W",["^ ","^19",[["^J"]]]],"^11",null,"^B",10,"^12","^Q","^13",["^4",[]],"^F","An abstraction for a running ajax request.","^[",["^H",["@interface"]]],"^16",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",32,"^A",4,"^B",32,"^C",21,"^D","^18","^F","Transforms the raw response (an implementation of AjaxResponse)","^G",["^H",["^I",["^H",[["^J","^17"]]]]]],"^D","^18","^5","~$ajax.protocols/-process-response","^?","dist/out/ajax/protocols.cljc","^C",21,"^L",["^H",[["^J","^17"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",28,"^P","^Q","^B",32,"^R",2,"^S",true,"^G",["^H",["^I",["^H",[["^J","^17"]]]]],"^F","Transforms the raw response (an implementation of AjaxResponse)"],"^1C",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",25,"^A",4,"^B",25,"^C",16,"^D","^E","^F","Was the response aborted.","^G",["^H",["^I",["^H",[["^J"]]]]]],"^D","^E","^5","~$ajax.protocols/-was-aborted","^?","dist/out/ajax/protocols.cljc","^C",16,"^L",["^H",[["^J"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",15,"^P","^Q","^B",25,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Was the response aborted."],"^15",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",30,"^A",4,"^B",30,"^C",20,"^D","^18","^F","Transforms the opts","^G",["^H",["^I",["^H",[["^J","^Y"]]]]]],"^D","^18","^5","~$ajax.protocols/-process-request","^?","dist/out/ajax/protocols.cljc","^C",20,"^L",["^H",[["^J","^Y"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",28,"^P","^Q","^B",30,"^R",2,"^S",true,"^G",["^H",["^I",["^H",[["^J","^Y"]]]]],"^F","Transforms the opts"],"^1B",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",21,"^A",4,"^B",21,"^C",9,"^D","^E","^F","Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer.","^G",["^H",["^I",["^H",[["^J"]]]]]],"^D","^E","^5","~$ajax.protocols/-body","^?","dist/out/ajax/protocols.cljc","^C",9,"^L",["^H",[["^J"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",15,"^P","^Q","^B",21,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer."],"~$map->Response",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^C",20,"^A",12,"^1F",true,"^1G","~:map","^@",35,"^B",35,"^G",["^H",["^I",["^H",[["~$G__23183"]]]]],"^F","Factory function for ajax.protocols/Response, taking a map of keywords to field values."],"^5","~$ajax.protocols/map->Response","^?","dist/out/ajax/protocols.cljc","^C",20,"^L",["^H",[["^1V"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^1F",true,"^O",false,"^1G","^1U","^@",35,"^P","^1D","^B",35,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^1V"]]]]],"^F","Factory function for ajax.protocols/Response, taking a map of keywords to field values."],"^X",["^ ","^=",null,"^>",["^ ","^?","/home/david/Code/davewm.github.io/dist/out/ajax/protocols.cljc","^@",6,"^A",4,"^B",6,"^C",20,"^D","^10","^F","Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest.","^G",["^H",["^I",["^H",[["^J","^Y","^Z"]]]]]],"^D","^10","^5","~$ajax.protocols/-js-ajax-request","^?","dist/out/ajax/protocols.cljc","^C",20,"^L",["^H",[["^J","^Y","^Z"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",3,"^P","^Q","^B",6,"^R",3,"^S",true,"^G",["^H",["^I",["^H",[["^J","^Y","^Z"]]]]],"^F","Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest."],"~$Response",["^ ","~:num-fields",5,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","^E","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","^1D","^?","dist/out/ajax/protocols.cljc","^C",20,"~:type",true,"^A",12,"^1F",true,"^@",35,"~:record",true,"^B",35,"^12","~$function","~:skip-protocol-flag",["^4",["^20","^21","^22","^23","^24","^25","^26","^27","^28","^29","^2:","^2;","^2<","^2=","^2>"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^1J","~:was-aborted","~:status-text","^1M","~:headers","^1K","~:status","^1L","^1I","~:body"]],"~:order",["^2J","^2K","^2H","^2I","^2G","^1I","^1J","^1K","^1L","^1M"]],"^F",null]